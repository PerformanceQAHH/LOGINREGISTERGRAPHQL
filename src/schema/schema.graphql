type Query {
    "Obtenemos las lista de todos los usuarios"
    users: [User!]!
    "Iniciamos sesión en el sistema"
    login(email: String!, password: String!): ResultToken!
    "Obtener nuestra información con el token"
    me: ResultUser!
}

type Mutation {
    "Registro de los usuarios en el sistema"
    register(user: UserInput): ResultUser!
}

type User {
    id: ID!
    name: String!
    lastname: String!
    email: String!
    password: String
    registerDate: String!
}

input UserInput {
    name: String!
    lastname: String!
    email: String!
    password: String!
}

type ResultUser {
    status: Boolean!
    message: String!
    user: User
}

type ResultToken {
    status: Boolean!
    message: String!
    token: String
}

type ResultNote {
    status: Boolean!
    message: String!
    note: Note
}

type Note {
    id: ID!
    content: String!
    createdAt: String!
    createdBy: User!
}

extend type Mutation {
    createNote(content: String!): ResultNote!
    logout: ResultUser!
}